	"" working nodes ""
-- create ec2 instance with ubuntu os, t2.micro

apt update -y
apt install containerd -y
systemctl start containerd
systemctl enable containerd
sudo modprobe overlay
sudo modprobe br_netfilter


cat > /etc/modules-load.d/kubernetes.conf << EOF
br_netfilter
ip_vs
ip_vs_rr
ip_vs_wrr
ip_vs_sh
overlay
EOF

sysctl --system
mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml

<<-- in line 139 : SystemCGroup = true
vim /etc/containerd/config.toml
systemctl restart containerd
apt-get update

apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg   
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list


apt-get update
apt-get install -y kubelet kubeadm kubectl
systemctl enable --now kubelet

vim /etc/sysctl.conf
<<-- add this line at end: -->> 
net.ipv4.ip_forward = 1
sysctl -p

 
--->>  run this command in control-plane..
kubeadm token create --print-join-command
--->>  join the worker node using the above command

done !!

check in control panel 
kubectl get nodes
