#################################################################################################################
Host EKS CLUSTER via EKSCTL
#################################################################################################################

<<< ---  Aws Installation --- >>>
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

<<< ---  Install EKS Tool --->>
 curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
 sudo mv /tmp/eksctl /usr/local/bin
 eksctl version
 
 <<< --- Install Kubectl --->>>
 curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
 sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl 
 kubectl version --client
 
 ssh-keygen

METHOD-1
 <<< --- Create EKS Cluster --->>
 eksctl create cluster --name my-cluster --region us-east-1 --version 1.32 --vpc-public-subnets subnet-002a81559973fe0a1,subnet-07fedfdb5a00512fe --without-nodegroup

<<< --- Create a Node Group --->>
 eksctl create nodegroup \
  --cluster my-cluster \
  --region us-east-1 \
  --name my-node-group \
  --node-ami-family Ubuntu2204 \
  --node-type t2.micro \
  --subnet-ids subnet-002a81559973fe0a1,subnet-07fedfdb5a00512fe \
  --nodes 3 \
  --nodes-min 2 \
  --nodes-max 4 \
  --ssh-access \
  --ssh-public-key /root/.ssh/id_rsa.pub

METHOD-2
<< --- Creating EKS Cluster with Node Group --- >>
eksctl create cluster --name milestone-2 --region us-east-1 --version 1.32 --node-type t2.small --nodes 3 --nodes-min 2 --nodes-max 4 --ssh-access --ssh-public-key /root/.ssh/id_rsa.pub


  
